pipeline 

{

agent any 
tools {
maven "Maven-3.8.5"
}

triggers {
  pollSCM '* * * * *'
  cron '* 10 * * *'
}

stages {
stage('checkout code')
{
steps {

sendSlackNotifications('STARTED')  

git branch: 'development', credentialsId: 'jenkins', url: 'https://github.com/devops-training-lokanath/maven-web-application.git'

}
}

//Build stage
stage ('Build')
{
steps
{
sh"mvn clean package"
}
}

//Execute SonarQube Report
stage ('ExecuteSonarQubeReport')
{
steps{
sh "mvn sonar:sonar"
}
}
/*
//Upload Artifacts into artifact repository
stage('UploadIntoNexus')
{
steps {
sh "mvn deploy"
}
}

stage ('DeployIntoTomcatServer')
{
steps 
{
sshagent(['3670b759-3cc6-475d-ad8c-8b6ba788cc1a']) 
{
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.8.29:/opt/apache-tomcat-9.0.63/webapps"
}
}

}
*/
}//stages closing 

post 
{
success {
sendSlackNotifications('SUCCESS')
}
failure {
sendSlackNotifications('FAILURE')
}

}

} //pipeline closing 

def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'random')
}
